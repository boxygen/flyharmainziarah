<?phpclass Apiblog_model extends CI_Model{      public $settings;    function __construct()    {        // Call the Model constructor        parent::__construct();       $this->load->library("Blog/Blog_lib");       $this->load->model('Blog/Blog_model');       $this->load->helper('apihelp');     //  $this->settings = $this->Settings_model->get_settings_data();    }   function get_posts($offset = null,$perpage = null){     $result = array();     $lib = $this->Blog_lib;    $posts = $lib->show_posts($offset,$perpage);   //  $posts = $this->Blog_model->api_list_posts();     foreach($posts['all_posts']['all'] as $post){       $lib->set_id($post->post_id);        $lib->post_short_details();       $result['posts'][] = array("id" => $post->post_id,"title" => $lib->title, "description" =>  html_entity_decode(strip_tags($lib->desc),ENT_QUOTES),"thumbnail" => $lib->thumbnail);     }     $result['totalPages'] = ceil($posts['paginationinfo']['totalrows'] / $posts['paginationinfo']['perpage']);     return $result;   }    function get_post($offset = null,$perpage = null){        $result = array();        $lib = $this->Blog_lib;        $posts = $lib->show_post($offset,$perpage);        //  $posts = $this->Blog_model->api_list_posts();        foreach($posts['all_posts']['all'] as $post){            $lib->set_id($post->post_id);            $lib->post_short_details();            $result['posts'][] = array("id" => $post->post_id,"title" => $lib->title, "description" =>  html_entity_decode(strip_tags($lib->desc),ENT_QUOTES),"thumbnail" => $lib->thumbnail);        }        $result['totalPages'] = ceil($posts['paginationinfo']['totalrows'] / $posts['paginationinfo']['perpage']);        return $result;    }        function post_details($postid){     $result = array();     $roomsarray = array();     $this->Blog_lib->set_id($postid);     $data = $this->Blog_lib->post_short_details();     if(!empty($data)){     $result = array("title" => $this->Blog_lib->title,"description" =>$this->Blog_lib->desc,"thumbnail" => $this->Blog_lib->thumbnail);     }     return $result;   }    function hotel_book($hotelid,$checkin,$checkout){     $result = array();     $roomsarray = array();     $this->Hotels_lib->set_id($hotelid);     $this->Hotels_lib->hotel_short_details();     $this->db->select('pt_hotels.hotel_id,pt_hotels.hotel_basic_price,pt_hotels.hotel_title,pt_hotels.hotel_desc,pt_hotels.hotel_latitude,pt_hotels.hotel_longitude');     $this->db->where('pt_hotels.hotel_id',$hotelid);     $rs = $this->db->get('pt_hotels')->result();     if(!empty($rs)){     $aprice = api_hotel_advanced_price($rs[0]->hotel_id);      if(empty($aprice)){         $price = $rs[0]->hotel_basic_price;       }else{         $price = $aprice;       }     $images = api_hotel_images($rs[0]->hotel_id);     $rooms = $this->Hotels_lib->hotel_rooms();     foreach($rooms as $room){       $roomthumb = api_default_room_image($room->room_id);      // $roomimages = array();        if(!empty($roomthumb)){          $roomthumbnail = PT_ROOMS_IMAGES.$roomthumb;         }else{           $roomthumbnail = PT_BLANK;         }       $roomprice = api_room_booking_adv_price($room->room_id,$checkin,$checkout);       $unavailable = api_is_room_unvailable($room->room_id,$checkin,$checkout);       $bookedrooms = api_is_room_booked($room->room_id,$checkin,$checkout);       $nights = api_count_days($checkin,$checkout);       $totalroomscount = $room->room_quantity;       if($unavailable){        $availablerooms = "0";       }else{        $availablerooms = $totalroomscount - $bookedrooms;       }        $roomsarray[] = array("room_id" => $room->room_id,"room_title" => $room->room_title ,"room_desc" => $room->room_desc,"price" => $roomprice,"adults" => $room->room_adults,"children" => $room->room_children,"rooms_available" => $availablerooms,"thumbnail" => $roomthumbnail);    //  $roomsarray[]['thumbnail'] = ;     }   // $result["response"] = $rs;    $result["response"]['id'] = $hotelid;    $result["response"]['title'] = $rs[0]->hotel_title;   // $result["response"]['description'] = strip_tags($rs[0]->hotel_desc);   // $result["response"]['price'] = $price;    //$result["response"]['latitude'] = $rs[0]->hotel_latitude;   // $result["response"]['longitude'] = $rs[0]->hotel_longitude;  //  $result["response"]['images'] = $images;    $result["response"]['thumbnail'] = $this->Hotels_lib->thumbnail;     $result["response"]['nights'] = $nights;     $result["response"]['deposit_type'] = $this->Hotels_lib->comm_type;     $result["response"]['deposit_value'] = $this->Hotels_lib->comm_value;     $result["response"]['tax_type'] = $this->Hotels_lib->tax_type;     $result["response"]['tax_value'] = $this->Hotels_lib->tax_value;     $result["response"]['gateway_id'] = "PayPal_Express";     $result["response"]['gateway_value'] = "5";     $result["response"]['nights'] = $nights;    $result["response"]['rooms'] = $roomsarray;    $result['currency_code'] = $this->settings[0]->currency_code;    $result['currency_sign'] = $this->settings[0]->currency_sign;    return $result;     }else{    return $result;     }   }}